apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.it.andfixcustom_exercise"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags ""
                //指定本地库的cup架构 即你希望编译你的c/c++源文件 编译几种CPU   //模拟器'x86','x86_64'
                abiFilters('armeabi-v7a')//真机
            }
        }

        ndk{
            //指定第三方库的cup架构
            //即应该打包几种cup，如果集成了第三方库，里面有提供x86，有提供arm的，这里可以指导只打包armeabi-v7aCPU架构的包，这样生成的apk就只会包含armeabi-v7a
            abiFilters('armeabi-v7a')//真机
        }
    }

    externalNativeBuild {
        cmake {
//            path "src/main/cpp/CMakeLists.txt"
            path "CMakeLists.txt"
            version "3.10.2"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
